{"remainingRequest":"/Users/tom/Documents/GitHub3/blurhash-ex/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tom/Documents/GitHub3/blurhash-ex/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tom/Documents/GitHub3/blurhash-ex/src/views/Home.vue","mtime":1609130164705},{"path":"/Users/tom/Documents/GitHub3/blurhash-ex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tom/Documents/GitHub3/blurhash-ex/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tom/Documents/GitHub3/blurhash-ex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tom/Documents/GitHub3/blurhash-ex/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiSG9tZSIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGltYWdlczogWwogICAgICAgICJodHRwczovL2ltYWdlcy51bnNwbGFzaC5jb20vcGhvdG8tMTU0NTkxMDY4NC04ZTdjMDgxYmU5YjA/YXV0bz1mb3JtYXQmZml0PWNyb3Amdz00MDAmaD0zMDAmcT04MCIsCiAgICAgICAgImh0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNjAxNzU4MjYwODkyLWE2MmM0ODZhY2U5Nz9hdXRvPWZvcm1hdCZmaXQ9Y3JvcCZ3PTQwMCZoPTMwMCZxPTgwIgogICAgICBdLAogICAgICBibHVycmVkOiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBnZXRCbHVyaGFzaCgpIHsKICAgICAgcmV0dXJuIHRoaXMuaW1hZ2UgKyAiJmZtPWJsdXJoYXNoIjsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IHsKICAgIHN0b3JlQmx1cigpIHsKICAgICAgZmV0Y2godGhpcy5pbWFnZSArICImZm09Ymx1cmhhc2giKQogICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpCiAgICAgIC50aGVuKGRhdGEgPT4gKHRoaXMuYmx1cnJlZCA9IGRhdGEudG90YWwpKQogICAgICByZXR1cm4gdGhpcy5ibHVycmVkOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <section>\n    <div v-for=\"image in images\" :key=\"image\">\n      <h2>{{ blurred }}</h2>\n      <blur-hash-image\n        width=\"400\"\n        height=\"300\"\n        hash=\"LdHfL}oJR$WBKnfi%3ofT0kCM{ay\"\n        :src=\"image\"\n        alt=\"green lawn grass during daytime\"\n        class=\"gallery-image\"\n      />\n    </div>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      images: [\n        \"https://images.unsplash.com/photo-1545910684-8e7c081be9b0?auto=format&fit=crop&w=400&h=300&q=80\",\n        \"https://images.unsplash.com/photo-1601758260892-a62c486ace97?auto=format&fit=crop&w=400&h=300&q=80\"\n      ],\n      blurred: []\n    };\n  },\n  computed: {\n    getBlurhash() {\n      return this.image + \"&fm=blurhash\";\n    }\n  },\n  created: {\n    storeBlur() {\n      fetch(this.image + \"&fm=blurhash\")\n      .then(response => response.json())\n      .then(data => (this.blurred = data.total))\n      return this.blurred;\n    }\n  }\n};\n</script>\n<style scoped>\n.gallery-image {\n  width: 400px;\n  height: 300px;\n}\n\nimg {\n  display: block;\n  float: none;\n}\n</style>\n"]}]}