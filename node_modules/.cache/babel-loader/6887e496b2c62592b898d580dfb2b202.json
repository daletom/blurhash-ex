{"remainingRequest":"/Users/tom/Documents/GitHub3/blurhash-ex/node_modules/babel-loader/lib/index.js!/Users/tom/Documents/GitHub3/blurhash-ex/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tom/Documents/GitHub3/blurhash-ex/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tom/Documents/GitHub3/blurhash-ex/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tom/Documents/GitHub3/blurhash-ex/src/views/Home.vue","mtime":1609199744944},{"path":"/Users/tom/Documents/GitHub3/blurhash-ex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tom/Documents/GitHub3/blurhash-ex/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tom/Documents/GitHub3/blurhash-ex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tom/Documents/GitHub3/blurhash-ex/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy90b20vRG9jdW1lbnRzL0dpdEh1YjMvYmx1cmhhc2gtZXgvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkhvbWUiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbWFnZXM6IFt7CiAgICAgICAgdXJsOiAnaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE1NDU5MTA2ODQtOGU3YzA4MWJlOWIwP2ZpdD1jcm9wJnc9NDAwJmg9MzAwJnE9ODAnLAogICAgICAgIGJoYXNoOiAnJwogICAgICB9LCB7CiAgICAgICAgdXJsOiAnaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE2MDE3NTgyNjA4OTItYTYyYzQ4NmFjZTk3P2ZpdD1jcm9wJnc9NDAwJmg9MzAwJnE9ODAnLAogICAgICAgIGJoYXNoOiAnJwogICAgICB9XSwKICAgICAgYmx1cnJlZDogJycsCiAgICAgIHVzZXJJZDogMQogICAgfTsKICB9LAogIGFzeW5jQ29tcHV0ZWQ6IHsKICAgIGdldEJsdXJoYXNoOiBmdW5jdGlvbiBnZXRCbHVyaGFzaCgpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVxdWVzdE9wdGlvbnM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgcmVxdWVzdE9wdGlvbnMgPSB7CiAgICAgICAgICAgICAgICAgIG1ldGhvZDogIkdFVCIsCiAgICAgICAgICAgICAgICAgIHJlZGlyZWN0OiAiZm9sbG93IgogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCJodHRwczovL2ltYWdlcy51bnNwbGFzaC5jb20vcGhvdG8tMTYwMTc1ODI2MDg5Mi1hNjJjNDg2YWNlOTc/Zml0PWNyb3Amdz00MDAmaD0zMDAiLCByZXF1ZXN0T3B0aW9ucykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnRleHQoKTsKICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpOwogICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmxvZygiZXJyb3IiLCBlcnJvcik7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQuc2VudCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9CiAgLypjb21wdXRlZDogewogICAgZ2V0Qmx1cmhhc2goKSB7CiAgICAgIHJldHVybiB0aGlzLmltYWdlICsgIiZmbT1ibHVyaGFzaCI7CiAgICB9CiAgfSwKICBjcmVhdGVkOiB7CiAgICBnZXRCbHVycnkoKSB7CiAgICAgIHJldHVybiB0aGlzLmltYWdlICsgIiZmbT1ibHVyaGFzaCI7CiAgICB9CiAgICBzdG9yZUJsdXIoKSB7CiAgICAgIHJldHVybiBmZXRjaCh0aGlzLmltYWdlICsgIiZmbT1ibHVyaGFzaCIpCiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmRhdGEpCiAgICAgIC8vLnRoZW4oZGF0YSA9PiAodGhpcy5ibHVycmVkID0gZGF0YS50b3RhbCkpCiAgICAgIC8vcmV0dXJuIHRoaXMuYmx1cnJlZDsKICAgIH0KICB9Ki8KCn07"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAiBA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,CACA;AACA,QAAA,GAAA,EAAA,qFADA;AAEA,QAAA,KAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,GAAA,EAAA,wFADA;AAEA,QAAA,KAAA,EAAA;AAFA,OALA,CADA;AAWA,MAAA,OAAA,EAAA,EAXA;AAYA,MAAA,MAAA,EAAA;AAZA,KAAA;AAcA,GAjBA;AAkBA,EAAA,aAAA,EAAA;AACA,IAAA,WADA,yBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,cADA,GACA;AACA,kBAAA,MAAA,EAAA,KADA;AAEA,kBAAA,QAAA,EAAA;AAFA,iBADA;AAAA;AAAA,uBAKA,KAAA,CAAA,mFAAA,EAAA,cAAA,CAAA,CACA,IADA,CACA,UAAA,QAAA;AAAA,yBAAA,QAAA,CAAA,IAAA,EAAA;AAAA,iBADA,EAEA,IAFA,CAEA,UAAA,MAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,yBAAA,MAAA;AACA,iBALA,EAMA,KANA,CAMA,UAAA,KAAA;AAAA,yBAAA,OAAA,CAAA,GAAA,CAAA,OAAA,EAAA,KAAA,CAAA;AAAA,iBANA,CALA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhDA,CAAA","sourcesContent":["<template>\n  <section>\n    <div v-for=\"(image, idx) in images\" :key=\"idx\">\n      <h2>{{  }}</h2>\n      <blur-hash-image\n        width=\"400\"\n        height=\"300\"\n        hash=\"edHo,toJR$WB%2Knfi%3ofM{S%kCM{ays:MvWVofoLWCIBoLWEWCWB\"\n        :src=\"image.url\"\n        alt=\"green lawn grass during daytime\"\n        class=\"gallery-image\"\n      />\n    </div>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      images: [\n        {\n          url: 'https://images.unsplash.com/photo-1545910684-8e7c081be9b0?fit=crop&w=400&h=300&q=80',\n          bhash: ''\n        },\n        {\n          url: 'https://images.unsplash.com/photo-1601758260892-a62c486ace97?fit=crop&w=400&h=300&q=80',\n          bhash: ''\n        }\n      ],\n      blurred: '',\n      userId: 1\n    };\n  },\n   asyncComputed: {\n    async getBlurhash() {\n      let requestOptions = {\n        method: \"GET\",\n        redirect: \"follow\",\n      };\n      return await fetch(\"https://images.unsplash.com/photo-1601758260892-a62c486ace97?fit=crop&w=400&h=300\", requestOptions)\n        .then((response) => response.text())\n        .then((result) => {\n          console.log(result);\n          return result;\n        })\n        .catch((error) => console.log(\"error\", error));\n    },\n  },\n  /*computed: {\n    getBlurhash() {\n      return this.image + \"&fm=blurhash\";\n    }\n  },\n  created: {\n    getBlurry() {\n      return this.image + \"&fm=blurhash\";\n    }\n    storeBlur() {\n      return fetch(this.image + \"&fm=blurhash\")\n      .then(response => response.data)\n      //.then(data => (this.blurred = data.total))\n      //return this.blurred;\n    }\n  }*/\n};\n</script>\n<style scoped>\n.gallery-image {\n  width: 400px;\n  height: 300px;\n}\n\nimg {\n  display: block;\n  float: none;\n}\n</style>\n"],"sourceRoot":"src/views"}]}